import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import java.sql.*;

class MyProject
{
    private static ResultSet rs = null;
    static int s=59,m=1;
    static int qcount=0;
    public static void main(String [] nm) {

        Connection con = null;
        //Database Connection
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/QuestionBank", "root", "pass");



            Statement stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            rs = stmt.executeQuery("select * from questionbank where qtag = 'GK'");
            rs.next();


        } catch (SQLException ex) {
            System.out.println(ex);
        }


        JFrame f = new JFrame("UPSC Practice Quiz");
        f.setSize(1200, 1200);
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        f.setLocationRelativeTo(null);
        //f.getContentPane().setBackground(Color.PINK);
        f.setLayout(null);


        JFrame jf = new JFrame("Result");
        jf.setSize(1000, 600);
        jf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        jf.setLocationRelativeTo(null);
        jf.setLayout(null);
        ImageIcon ic1=new ImageIcon("C:\\Users\\91639\\Downloads\\2384075.jpg");
        JLabel l=new JLabel(ic1);
        jf.setContentPane(l);
        JLabel msg=new JLabel();
        jf.add(msg);
        msg.setBounds(30,100,930,400);
        msg.setFont( new Font("Serif", 1, 40));
        msg.setForeground(Color.gray);
        jf.setVisible(false);



      ImageIcon ic=new ImageIcon("C:\\Users\\91639\\Downloads\\2384075.jpg");
      JLabel l1=new JLabel(ic);
      f.setContentPane(l1);

       Image icon = Toolkit.getDefaultToolkit().getImage("C:\\Users\\91639\\Downloads\\istockphoto-1341560999-1024x1024.jpg");
        f.setIconImage(icon);


        Font plain = new Font("Serif", 0, 30);
        Font bold1 = new Font("Serif", 1, 30);
        Font bold = new Font("Serif", 1, 20);


        JLabel question = new JLabel();
        question.setFont(bold);
        JRadioButton opa = new JRadioButton();
        opa.setFont(plain);
        JRadioButton opb = new JRadioButton();
        opb.setFont(plain);
        JRadioButton opc = new JRadioButton();
        opc.setFont(plain);
        JRadioButton opd = new JRadioButton();
        opd.setFont(plain);

        JButton next = new JButton("NEXT");
        next.setFont(bold);
        JButton prev = new JButton("PREVIOUS");
        prev.setFont(bold);
        JButton clear = new JButton("CLEAR");
        clear.setFont(bold);
        JButton end = new JButton("END TEST");
        end.setFont(bold);

        end.setBounds(40, 700, 150, 40);
        prev.setBounds(250, 700, 150, 40);
        next.setBounds(450, 700, 150, 40);
        clear.setBounds(650, 700, 150, 40);

        next.setBackground(Color.decode("#7d53cc"));
        prev.setBackground(Color.decode("#7d53cc"));
        clear.setBackground(Color.decode("#7d53cc"));
        end.setBackground(Color.RED);
        f.add(next);
        f.add(prev);
        f.add(clear);
        f.add(end);


        f.add(opa);
        opa.setBounds(180, 300, 500, 50);
        f.add(opb);
        opb.setBounds(180, 370, 500, 50);
        f.add(opc);
        opc.setBounds(180, 440, 500, 50);
        f.add(opd);
        opd.setBounds(180, 510, 500, 50);


        opa.setFont(plain);
        opb.setFont(plain);
        opc.setFont(plain);
        opd.setFont(plain);
        opa.setForeground(Color.BLUE);
        opa.setBackground(new Color(135,206,235));
        opb.setBackground(new Color(135,206,235));
        opb.setForeground(Color.BLUE);
        opc.setBackground(new Color(135,206,235));
        opc.setForeground(Color.BLUE);
        opd.setBackground(new Color(135,206,235));
        opd.setForeground(Color.BLUE);



        f.add(question);
        question.setBounds(100, 100, 1000, 200);
        question.setFont(bold1);
        question.setForeground(Color.BLACK);


        try {
            String q = rs.getString(1);
            String a = rs.getString(2);
            String b = rs.getString(3);
            String c = rs.getString(4);
            String d = rs.getString(5);
            question.setText(q);
            opa.setLabel(a);
            opb.setLabel(b);
            opc.setLabel(c);
            opd.setLabel(d);
        } catch (SQLException exc) {
            System.out.println(exc);
        }


        ButtonGroup bg = new ButtonGroup();
        bg.add(opa);
        bg.add(opb);
        bg.add(opc);
        bg.add(opd);


        //Timer
        JLabel timer=new JLabel();

        Thread timer_thread=new Thread(
                ()->{
                    while (true){
                        s--;
                        if(s==0){
                            m--;s=59;
                        }
                        try{
                            Thread.sleep(1000);
                        }
                        catch(InterruptedException ex) {}

                        timer.setText("Time Left: " + m + " : " + s);
                        if(m==-1){
                            try {
                              //   resetColors();
                                rs.next();
                                String q = rs.getString(1);
                                String a = rs.getString(2);
                                String b = rs.getString(3);
                                String c = rs.getString(4);
                                String d = rs.getString(5);
                                question.setText(q);
                                opa.setLabel(a);
                                opb.setLabel(b);
                                opc.setLabel(c);
                                opd.setLabel(d);
                                m=1;s=59;
                            } catch (SQLException exc) {
                                System.out.println(exc);
                            }
                        }
                    }

                }
                );

        timer_thread.start();

        f.add(timer);
        timer.setBounds(700, 70, 300, 100);
        timer.setFont(bold1);
        timer.setForeground(Color.RED);


        class MyListener implements ActionListener, ItemListener {

            public void resetColors() {

                opa.setBackground(new Color(135,206,235));
                opb.setBackground(new Color(135,206,235));
                opc.setBackground(new Color(135,206,235));
                opd.setBackground(new Color(135,206,235));
            }
            public void actionPerformed(ActionEvent ae) {

                if (ae.getSource() == clear) {
                    bg.clearSelection();
                    resetColors();
                }


                else if (ae.getSource() == end) {
                    //display the result page
                    f.setVisible(false);
                    jf.setVisible(true);

                }

                else if (ae.getSource() == next) {

                    resetColors();
                    qcount=qcount+1;
                    m=1;s=59;
                    msg.setText("You have marked "+qcount+" questions.\n\n\n\t"+"You have got "+qcount+" marks");

                    try {
                        bg.clearSelection();
                        rs.next();
                        String q = rs.getString(1);
                        String a = rs.getString(2);
                        String b = rs.getString(3);
                        String c = rs.getString(4);
                        String d = rs.getString(5);

                        question.setText(q);
                        opa.setText(a);;
                        opb.setText(b);
                        opc.setText(c);
                        opd.setText(d);
                    }

                    catch(SQLException ie){
                        System.out.println(ie);
                    }


                } else if (ae.getSource() == prev) {
                    resetColors();
                    try {
                        bg.clearSelection();

                        if (rs.previous()) {

                            String q = rs.getString(1);
                            String a = rs.getString(2);
                            String b = rs.getString(3);
                            String c = rs.getString(4);
                            String d = rs.getString(5);
                            question.setText(q);
                            opa.setText(a);
                            opb.setText(b);
                            opc.setText(c);
                            opd.setText(d);
                        } else {
                            //Beginning
                        }
                    } catch (SQLException exec) {
                        System.out.println(exec);
                    }
                }
            }

            public void itemStateChanged(ItemEvent e) {
                if (opa.isSelected()) {
                    try {

                        opb.setBackground(new Color(135,206,235));
                        opc.setBackground(new Color(135,206,235));
                        opd.setBackground(new Color(135,206,235));
                        bg.clearSelection();
                        if (opa.getText().equals(rs.getString(7))) {
                            opa.setBackground(Color.GREEN);

                        } else {
                            opa.setBackground(Color.RED);

                        }
                    } catch (SQLException ex) {
                        System.out.println(ex);
                    }

                }


                else if (opb.isSelected()) {
                    try {

                        opa.setBackground(new Color(135,206,235));
                        opc.setBackground(new Color(135,206,235));
                        opd.setBackground(new Color(135,206,235));
                        bg.clearSelection();
                        if (opb.getText().equals(rs.getString(7))) {
                            opb.setBackground(Color.GREEN);

                        } else {
                            opb.setBackground(Color.RED);
                        }
                    } catch (SQLException ex) {
                        System.out.println(ex);
                    }
                }


                if (opc.isSelected()) {
                    try {

                        opb.setBackground(new Color(135,206,235));
                        opa.setBackground(new Color(135,206,235));
                        opd.setBackground(new Color(135,206,235));
                        bg.clearSelection();
                        if (opc.getText().equals(rs.getString(7))) {
                            opc.setBackground(Color.GREEN);
                        } else {
                            opc.setBackground(Color.RED);
                        }
                    } catch (SQLException ex) {
                        System.out.println(ex);
                    }
                }


               else if (opd.isSelected()) {
                    try {

                        opb.setBackground(new Color(135,206,235));
                        opc.setBackground(new Color(135,206,235));
                        opa.setBackground(new Color(135,206,235));
                        bg.clearSelection();
                        if (opd.getText().equals(rs.getString(7))) {
                            opd.setBackground(Color.GREEN);

                        } else {
                            opd.setBackground(Color.RED);
                        }
                    } catch (SQLException ex) {
                        System.out.println(ex);
                    }
                }
            }
        }


                MyListener ml = new MyListener();
                end.addActionListener(ml);
                clear.addActionListener(ml);
                prev.addActionListener(ml);
                next.addActionListener(ml);


                opa.addItemListener(ml);
                opb.addItemListener(ml);
                opc.addItemListener(ml);
                opd.addItemListener(ml);


                f.setVisible(true);
            }


}



